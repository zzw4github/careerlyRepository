<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd" >

	<!-- 声明自动为spring容器中那些配置@aspectJ切面的bean创建代理   
	当 proxy-target-class为ture时，表示使用CGLib动态代理技术织入增强-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <!-- 开启controller注解支持 -->
    <mvc:annotation-driven />
    
    <!-- spring 组件扫描 -->
    <context:component-scan base-package="com.careerly.business.controller">
    	<!-- 扫描controller组件 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 配置拦截器，对请求进行拦截 处理 -->
    <mvc:interceptors>
        <bean class="com.careerly.common.SessionChecker" />
    </mvc:interceptors>

	<!-- 如果请求为 “/”,则直接重定向到“/index” -->
    <mvc:view-controller path="/" view-name="forward:/index"/>
    
    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
    
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- p:order="1" -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/careerly"/>
        <property name="suffix" value=".jsp"/>
    </bean>
	
	<!-- 同样的类容用不同的视图呈现 -->
	<bean id="contentNegotiatingViewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="order" value="1"></property>
	    <property name="ignoreAcceptHeader" value="true" />
	    <property name="mediaTypes">
	      <map>
	        <entry key="json" value="application/json" />
	        <entry key="xml" value="application/xml" />
	        <entry key="html" value="text/html" />
	        <entry key="xsl" value="application/vnd.ms-excel"/>
	      </map>
	    </property>
	    <property name="defaultViews">
	      <list>
	        <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
	          <property name="extractValueFromSingleKeyModel" value="true" />
	        </bean>
	        <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
	          <constructor-arg>
	            <bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
	          </constructor-arg>
	        </bean>
	      </list>
	    </property>
	</bean>
</beans>