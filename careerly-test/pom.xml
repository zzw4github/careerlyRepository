<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>careerly-test</groupId>
	<artifactId>careerly-test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- 打包类型 -->
	<packaging>war</packaging>

	<name>careerly-test</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- 编码格式 -->
		<!-- jar包版本号 start -->
		<spring.version>3.1.2.RELEASE</spring.version><!-- spring 版本号 -->
		<hibernate.version>4.2.0.SP1</hibernate.version><!-- hibernate版本号 -->
		<mysql.version>5.1.6</mysql.version><!-- 连接mysql数据库jar包版本号 -->
		<c3p0.version>0.9.1.2</c3p0.version><!-- c3p0连接池版本号 -->
		<org.aspectj.version>1.7.0</org.aspectj.version><!--  -->
		<org.slf4j.version>1.5.8</org.slf4j.version><!-- slf4j日志版本号 -->
		<javax.mail.version>1.5.0-b01</javax.mail.version><!-- 邮件版本号java mail -->
		<org.json.version>20090211</org.json.version><!-- json版本号 -->
		<net.sf.json-lib.version>2.4</net.sf.json-lib.version><!-- json版本号 -->
		<org.codehaus.jackson.version>1.9.8</org.codehaus.jackson.version><!-- jackson版本号 -->
		<javax.servlet.version>2.5</javax.servlet.version><!-- servlet 版本号 -->
		<jstl.version>1.2</jstl.version><!-- jstl 版本号 -->
		<commons-fileupload.version>1.3</commons-fileupload.version><!-- fileupload 版本号 -->
		<com.jcraft.version>0.1.46</com.jcraft.version><!-- jsch版本（远程登录） -->
		<junit.version>4.11</junit.version><!-- junit版本号 -->
		<com.thoughtworks.xstream.version>1.4.4</com.thoughtworks.xstream.version>
		<!-- jar版本号 end -->
	</properties>
	<dependencies>

		<!-- 配置hibernate start -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>
		<!-- 配置hibernate end -->

		<!-- 配置c3p0连接池 -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- 配置spring start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${com.thoughtworks.xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>

		<!-- 配置spring end -->

		<!-- log start -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<!-- log end -->
		
		<!-- mail start -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${javax.mail.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- mail end -->

		<!-- 配置json start -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${org.json.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<classifier>jdk15</classifier>
			<version>${net.sf.json-lib.version}</version>
		</dependency>
		<!-- 配置json end -->

		<!-- jackson start -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${org.codehaus.jackson.version}</version>
		</dependency>
		<!-- jackson end -->
		
		<!-- 配置web start -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<!-- 配置web end -->

		<!-- file upload start -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<!-- file upload end -->
		
		<!-- jsch start -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>${com.jcraft.version}</version>
		</dependency>
		<!-- jsch end -->		
		
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<!-- build project -->
	<build>
		<!-- 部署 name -->
		<finalName>careerly-test</finalName>
		<resources>
			<!-- 导入properties文件 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<!-- 导入xml文件 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>

			<!-- 指定jdk版本和编码 ，编译java代码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 编译资源文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 把web项目打成war包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<skip>true</skip>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit4</artifactId>
						<version>2.12</version>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<contextPath>/careerly-test</contextPath>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopKey>foo</stopKey>
					<stopPort>9999</stopPort>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8888</port>
						</connector>
					</connectors>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
